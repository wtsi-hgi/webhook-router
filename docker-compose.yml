version: '3'
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.1.0
    networks: [app]
    expose:
      - "9200"
  kibana:
    image: docker.elastic.co/kibana/kibana:5.6.3
    depends_on:
      - "elasticsearch"
    ports:
      - "5601:5601"
    networks: [app]
  configserver:
    build: config-server
    ports:
      - "8081:8080"
    depends_on:
      - "elasticsearch"
    networks: [app]
    volumes:
      - "./config.json:/config-server/config.json"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD:
      POSTGRES_HOST: db
  router:
    build: router
    ports:
      - "8082:8080"
    depends_on:
      - "elasticsearch"
      - "configserver"
    networks: [app]
  firewallconfig:
    build: firewall-config
    ports:
      - "8083:8080"
    networks: [app]
  frontend:
    build: front-end
    ports:
      - "8080:80"
    depends_on:
      - "configserver"
    networks: [app]
    volumes:
      - "./config.json:/usr/local/apache2/htdocs/config.json"
  db:
    image: postgres
    environment:
      POSTGRES_PASSWORD:
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    networks: [app]
    volumes:
      - pgdata:/var/lib/postgresql
    expose:
      - "5432"
  adminer:
    image: adminer
    restart: always
    ports:
        - 8084:8080
    networks: [app]
networks:
  app:
    driver_opts:
      com.docker.network.driver.mtu: 1400
    ipam:
      driver: default
      config:
        - subnet: 10.11.0.1/22
volumes:
  pgdata: